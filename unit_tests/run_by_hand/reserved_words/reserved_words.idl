interface int {
    attribute bool auto;
    for volatile(restrict return, default continue);
    if else(sizeof union, while break);
    case const(double do, extern goto);
    inline static(struct switch, register char);
    long bob(any any);
};

[ExternalInterface=(octet2)]
interface interface {
    attribute long any;
    attribute any long;
    void void(byte byte, octet octet);
};

interface javascript {
    attribute export delete;
    try yield(class continue);
};

dictionary for {
};

dictionary if {
};

dictionary case {
};

dictionary inline {
};

dictionary struct {
};

dictionary register {
};

dictionary extern {
};

dictionary while {
};

dictionary sizeof {
};

dictionary restrict {
};

dictionary default {
};

typedef long bool;
typedef long for2;
typedef long restrict;
typedef long default2;
typedef long if2;
typedef long sizeof;
typedef long while2;
typedef long case2;
typedef long extern;
typedef long inline;
typedef long struct;
typedef long register;
typedef long export2;
typedef long try2;
typedef long class2;
