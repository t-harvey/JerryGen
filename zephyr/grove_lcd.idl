// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
// 
//   http:// www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// require returns a GroveLCD object
// var grove_lcd = require('grove_lcd');
[ReturnFromRequire]
interface GroveLCD {
    GroveLCDDevice init();
    attribute unsigned long GLCD_FS_8BIT_MODE;
    attribute unsigned long GLCD_FS_ROWS_2;
    attribute unsigned long GLCD_FS_ROWS_1;
    attribute unsigned long GLCD_FS_DOT_SIZE_BIG;
    attribute unsigned long GLCD_FS_DOT_SIZE_LITTLE;

    attribute unsigned long GLCD_DS_DISPLAY_ON;
    attribute unsigned long GLCD_DS_DISPLAY_OFF;
    attribute unsigned long GLCD_DS_CURSOR_ON;
    attribute unsigned long GLCD_DS_CURSOR_OFF;
    attribute unsigned long GLCD_DS_BLINK_ON;
    attribute unsigned long GLCD_DS_BLINK_OFF;
    attribute unsigned long GLCD_IS_SHIFT_INCREMENT;
    attribute unsigned long GLCD_IS_SHIFT_DECREMENT;
    attribute unsigned long GLCD_IS_ENTRY_LEFT;
    attribute unsigned long GLCD_IS_ENTRY_RIGHT; 
    attribute unsigned long GROVE_RGB_WHITE;
    attribute unsigned long GROVE_RGB_RED;
    attribute unsigned long GROVE_RGB_GREEN;
    attribute unsigned long GROVE_RGB_BLUE;
};
interface GroveLCDDevice {
    void print(string text);
    void clear();
    void setCursorPos(unsigned long col, unsigned long row);
    void selectColor(unsigned long index);
    void setColor(unsigned long r, unsigned long g, unsigned long b);
    void setFunction(unsigned long config);
    unsigned long getFunction();
    void setDisplayState(unsigned long config);
    unsigned long getDisplayState();
};
