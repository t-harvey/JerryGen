// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
// 
//   http:// www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// require returns a GFX object
// var gfx = require('gfx');
[ReturnFromRequire]
interface GFX {
    GFXContext init(long screen_width, long screen_height, InitCallback init_screen,
                    DrawingCallback draw, optional this this_object);
};

interface GFXContext {
    void fillRect(long x_coord, long y_coord, long width, long height,
                  sequence < byte > color);
    void drawPixel(long x_coord, long y_coord, sequence < byte > color);
    void drawLine(long x0_coord, long y0_coord, long x1_coord,
                  long y1_coord, sequence < byte > color, optional long size);
    void drawVLine(long x_coord, long y_coord, long height, sequence < byte > color,
                   optional long size);
    void drawHLine(long x_coord, long y_coord, long width, sequence < byte > color,
                   optional long size);
    void drawRect(long x_coord, long y_coord, long width, long height,
                  sequence < byte > color, optional long size);
    void drawChar(long x_coord, long y_coord, byte char, sequence < byte > color,
                  optional long size);
    void drawString(long x_coord, long y_coord, string str, sequence < byte > color,
                    optional long size);
};
callback InitCallback = void (any... params);
callback DrawingCallback = void (any... params);
