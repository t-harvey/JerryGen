// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
// 
//   http:// www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.


[NoInterfaceObject, ReturnFromRequire]
interface dgram {
    DgramSocket createSocket(string udp4_or_udp6);
};

[NoInterfaceObject,ExternalInterface=(buffer,Buffer)]
interface DgramSocket {
    void on(string event, RecvCallback cb);
    void bind(long port, string ip_addr);
    void send(Buffer buf, unsigned long offset, unsigned long len, long port, string ip_addr, optional SendCallback cb);
    void close();
};

dictionary Error {
    long error_code;
}; /* TODO: temporary, until I get the Error type implemented */

callback RecvCallback = void (Buffer msg, RemoteInfo rinfo);
callback SendCallback = void (Error err);  // or undefined if no error

/* TODO: change the type of "x" to "any" (original zephyr says "various"(?) */
callback EventCallback = void (long x);  // callback arg depends on event

dictionary RemoteInfo {
    string ip_addr;
    string family;
    long port;
};
