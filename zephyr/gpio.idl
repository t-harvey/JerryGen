// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
// 
//   http:// www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// require returns a GPIO object
// var gpio = require('gpio');
[ReturnFromRequire]
interface GPIO {
    GPIOPin open( (long or string or GPIOInit) init);
};

dictionary GPIOInit {
    (long or string) pin;
    boolean activeLow = false;
    GPIOMode  mode =  "out";
    GPIOEdge  edge =  "none";
    GPIOState state = "none";
};
interface GPIOPin {
    long read();
    void write(long value);
    void close();
    attribute gpio_ChangeCallback onchange;
};
callback gpio_ChangeCallback = void (GPIOEvent event);
dictionary GPIOEvent {
    long value;
};
enum GPIOMode  { "out", "in" };
enum GPIOEdge  { "none", "rising", "falling", "any" };
enum GPIOState { "none", "up", "down" };
